name: CI

on: ["push", "pull_request"]

env:
  UV_SYSTEM_PYTHON: true
  UV_PYTHON_DOWNLOADS: never

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "pypy3.8", "pypy3.9", "pypy3.10"]
        exclude:
          - os: windows-latest
            python: "pypy3.8"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install uv --disable-pip-version-check
          uv pip install -r pyproject.toml . pytest pytest-asyncio --all-extras
      - name: Run pytest
        run: |
          pytest -v
          uv pip install "pydantic<2"
          pytest -v
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          pip install uv --disable-pip-version-check
          uv pip install -r pyproject.toml . --all-extras isort black
      - name: Check formatting
        run: |
          isort . --check --diff
          black . --check --diff
      - name: Check typing
        run: |
          yarn global add pyright
          pyright
  publish:
    needs: [test, check]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install uv
        run: pip install uv --disable-pip-version-check
      - name: Build package
        run: uv build
      - name: Publish to PyPI
        continue-on-error: true
        run: uv publish
